@import '../../../../variables';
@import '../task/task.component.mixins';

:host {
  position: relative;
  z-index: 1;
  display: block;
  padding-bottom: $s;

  task-list {
    padding: 0;
    margin-bottom: 0;
  }
}

::ng-deep task .box {
  @include darkTheme() {
  }
}


.task-title-wrapper {
  min-height: $bar-height;
  display: flex;
  align-items: center;
  position: sticky;
  background: inherit;
  top: 0;
  margin-top: -1px;
  z-index: 44;

  @include lightTheme() {
    background: #fff;
    box-shadow: $whiteframe-shadow-1dp;
  }
  @include darkTheme() {
    background: $dark-theme-bg-slightly-lighter;
    border: 1px solid $dark-theme-extra-border-color;
  }
}

.task-title {
  @include taskTitle;
  transform-origin: top center;
  padding-top: $s;
  padding-bottom: $s;
  font-size: 15px;
  font-weight: normal;
  margin: 0;
  flex-grow: 1;
  line-height: 1.4;
}

progress-bar {
  position: absolute !important;
  bottom: 0;
}

.wrapper {
  // 1px for the border
  //margin: 0 1px 0;
  transition: $transition-standard;

  @media (max-width: $layout-xs) {
    margin: $s/2;
    margin-bottom: $s;
  }

  //border-top: 1px solid transparent;
  //
  //@include lightTheme {
  //  border-top-color: #ddd;
  //}
  //
  //@include darkTheme {
  //  //border-top-color: $dark-theme-extra-border-color;
  //}
}


.input-item,
.mat-expansion-panel {
  box-shadow: none;
  //overflow: inherit !important;
  border-width: 1px;
  border-style: solid;
  border-radius: 0;
  margin: 8px;

  &,
  ::ng-deep & .mat-expansion-panel-header {
    font-size: 14px;
  }

  @include darkTheme() {
    background: $dark-theme-bg-slightly-lighter;
    border-color: $dark-theme-extra-border-color;
  }
  @include lightTheme {
    background: #fff;
    border-color: $light-theme-extra-border-color;
  }
}

:host::ng-deep {
  .mat-expansion-panel-body {
    padding: 0;
  }

  .mat-expansion-panel-header {
    position: sticky;
    top: 0;
  }

  .mat-expansion-panel-header-title {
    flex-grow: 0;
    display: flex;
    align-items: center;
    //min-width: 130px;
  }

  .mat-expansion-panel-header-description {
    text-align: right;

    > * {
      margin-left: auto;
      display: flex;
      align-items: center;
    }
  }

  .panel-header-icon {
    margin-right: $s;
  }
}


:host::ng-deep issue-header > * {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
}


.panel-content-wrapper {
  margin: $s $s;
  display: block;

  //@include layerTextAndBgHigher();
  @include standardThemeTextColorLessIntense();


  &.issue-content-wrapper {
    // required for inner paddings to be there
    margin: 0;
    overflow: hidden;
  }

  &.attachment-list-tab-wrapper {
    padding: $s $s*2;

    h3 {
      margin-bottom: $s;
    }
  }

  &.note-wrapper {
    display: block;
    overflow: hidden;
    box-shadow: $whiteframe-shadow-1dp;
  }

  &.sub-tasks {
    margin: 0;
  }

  ::ng-deep {
    .markdown-wrapper {
      min-height: 60px;

      @include mq(xs) {
        //max-height: 40vh;
      }
    }

    .markdown-unparsed,
    .markdown-parsed {
      color: inherit;
      background-color: inherit;

      @include lightTheme {
        background: $light-theme-bg-darker;
      }
      @include darkTheme() {
        background: $dark-theme-bg-lighter;
      }
    }
  }
}


// Input-Item
// Similar styles to panel
.input-item {
  position: relative;
  display: flex;
  align-items: center;
  height: 48px;
  cursor: pointer;

  &:hover {
    @include lightTheme() {
      background: rgba(var(--palette-background-hover), var(--palette-background-hover-alpha, 1));
    }
    @include darkTheme() {
      background-color: $dark-theme-bg-lightest;
    }
  }

  &.--estimate {
    progress-bar {
      @include lightTheme() {
        background: $light-theme-extra-border-color;
      }
      @include darkTheme() {
        background: $dark-theme-extra-border-color;
      }
    }

    &:hover progress-bar {
      background: $c-accent !important;
    }
  }
}

.input-item__title {
  display: flex;
  align-items: center;
  padding: 0 $s*3;
}

.input-item__value {
  text-align: right;
  display: flex;
  flex-grow: 1;

  @include lightTheme() {
    color: rgba(var(--palette-foreground-secondary-text), var(--palette-foreground-secondary-text-alpha, 1));
  }

  @include darkTheme() {
    color: rgba(255, 255, 255, 0.7);
  }

  > * {
    flex-grow: 1;
    display: flex;
    align-items: center;
    text-align: right;
    justify-content: flex-end;
  }
}

.input-item__edit-btn {
  margin-right: $s;
  opacity: 0;

  .input-item:hover & {
    opacity: 1;
  }
}


// OTHER
.toggle-sub-tasks-btn.toggle-sub-tasks-btn {
  position: absolute !important;
  transform: translateY(-50%);
  left: -24px;
  top: 50%;
  //z-index: $z-toggle-sub-task-btn !important;
  min-width: 0;
  min-height: 0;
  width: 32px;
  height: 32px;
  margin-top: -1px !important;
  transform-origin: left top;
  transition-property: all;

  :host-context(.isNoTouchDevice) & {
    opacity: 0;
  }

  :host:hover & {
    opacity: 1;
  }

  mat-icon {
    transition: $transition-standard;
    margin-top: -8px;
    //opacity: $task-icon-default-opacity;

    &.isHideDoneTasks {
      transform: rotate(-45deg);
    }
  }
}
