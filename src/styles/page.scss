@import '../_variables.scss';

html,
body,
app-root,
.app-frame {
  overflow: hidden;
  margin: 0;
  height: 100%;
  box-sizing: border-box;
  //font-family: 'Montserrat', 'Roboto', sans-serif;
  //font-family: 'Open Sans', sans-serif;
  font-family: 'Roboto', sans-serif;
}

body {
  //background-attachment: fixed;

  &.isLightTheme {
    color: $light-theme-text-color;
    background: $light-theme-bg;
    //background: radial-gradient(rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3));
    //background: radial-gradient(rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.1));
    //background: linear-gradient(180deg, $c-primary-400 0, $c-primary-100 30%, $c-primary-300 90%, $c-primary-400 100%);
    background: linear-gradient(180deg, $c-primary-100 0, $c-primary-50 90%, $light-theme-bg 100%);
    background: linear-gradient(180deg, $c-primary-200 0, $c-primary-100 90%, $c-primary-50 100%);
    background: linear-gradient(180deg, $c-primary-50 0, $c-primary-100 85%, $c-primary-200 100%);
    //background: linear-gradient(180deg,  $c-primary-50 0, $c-primary-100 50%, $c-primary-200 100%);
    //background: $c-primary-50;
  }

  &.isDarkTheme {
    color: $dark-theme-text-color;
    //background: radial-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.9));
    background: linear-gradient(180deg, $dark-theme-bg 0, $c-primary-900 20%, $c-primary-800 50%, $c-primary-700 100%);
    //background: $c-primary-900;
  }
}
// TODO check if needed
//// makes background a bit darker
//::ng-deep .mat-drawer-content {
//  @include lightTheme {
//    background: linear-gradient(180deg, rgba(0, 0, 0, 0.03) 0, rgba(0, 0, 0, 0) 50%, rgba(255, 255, 255, 0.15) 100%);
//  }
//
//  @include darkTheme {
//    background: rgba(0, 0, 0, 0.15);
//  }
//}

.page-wrapper {
  padding: $s 2*$s $s*9;
}

.component-wrapper {
  max-width: $component-max-width;
  margin: auto;
}

.task-list-wrapper {
  padding: 0 0 $s*9;
  // for a little bit of extra space for 800 width
  max-width: #{$component-max-width - 40};
  margin: auto;

  @include mq(xxs) {
    padding: 0 $s*1 $s*9;
  }

  @include mq(xs) {
    padding: 0 $s*1.5 $s*9;
  }

  @include mq(sm) {
    padding: 0 3*$s $s*9;
    max-width: $component-max-width;
  }

  improvement-banner + & {
    padding-top: 0;
  }
}


a[href] {
  color: $c-accent;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

// make images responsive per default
img {
  max-width: 100%;
  height: auto;
  display: block;
}


