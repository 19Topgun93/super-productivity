global-link-list {
  position: relative;
  z-index: 15;
  .show-bookmarks-btn {
    position: absolute;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    top: 0;
    @media(max-width: $layout-xs) {
      transform: translate(-50%, -33%);
      height: 30px !important;
      min-height: 30px !important;
      padding: 0 !important;
    }
  }
}

.global-link-list-outer {
  overflow: visible !important;
}

.global-link-list-inner {
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  flex-wrap: wrap;
  padding-bottom: 10px;

  .global-link {
    flex: 1 1 auto;
    margin: 6px 3px 0;
    position: relative;

    > .md-button:focus + .controls,
    &.focus .controls,
    &:hover .controls {
      visibility: visible;

      .md-button {
        opacity: 1;
      }
      .edit-button {
        transform: translate(0, 0);
      }
      .trash-button {
        transform: translate(0, 0);
      }
    }

    &:first-child {
      flex: 0 0 auto;
    }

    @include ng-pop-in-popout;
  }

  .global-link > .md-button {
    border-radius: 0;
    text-decoration: none;
    display: flex;
    align-items: flex-start;
    flex-direction: row;
    justify-content: center;
    color: #000000;
    text-transform: none;
    margin: 0;
    max-height: 36px;
    min-width: 0;
  }

  .controls {
    position: absolute;
    top: 100%;
    left: 50%;
    z-index: 5;
    visibility: hidden;
    display: flex;
    flex-direction: row;
    // TODO fix that this causes an overflow
    padding: 0 10px;
    transform: translate(-50%, 0);

    .md-button {
      transition: 0.2s all cubic-bezier(0.25, 0.8, 0.25, 1);
      border-radius: 0;
      margin: 0;
      padding: 0;
      width: 32px;
      height: 32px;
      min-height: 0;
      opacity: 0;
    }
  }

  $this-distance: 30px;
  .edit-button {
    // TODO fix that this causes an overflow
    transform: translate(-$this-distance, $this-distance);
  }
  .trash-button {
    // TODO fix that this causes an overflow
    transform: translate($this-distance, $this-distance);
  }
}