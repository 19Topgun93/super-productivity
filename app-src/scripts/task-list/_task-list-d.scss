task-list {
  display: block;
}

.task-list {
  text-align: left;
  min-height: 50px;
  list-style: none;
  // add a little padding to top and bottom, to make drag dropping easier
  padding: 5px 0;
  margin: 0;
  display: block;

  .as-sortable-placeholder,
  .dndPlaceholder {
    margin: 1px 2px 5px 1px;
    display: block;
    min-height: 22px;
    background-color: #dddddd;

    @include dark-theme {
      background-color: $dark-theme-bg-darker;
    }
  }

  @media(max-width: $layout-xs) {
    // make space for the expand icon
    margin-left: 12px;
  }

  // nested lists
  .task-list {
    margin: 2px 5px 5px 5px;

    @media(max-width: $layout-xs) {
      margin: 1px 0 5px 0;
    }
  }

  &.is-hide-controls {
    .task {
      .handle,
      .controls,
      .md-icon-button {
        display: none;
      }
      .collapse-sub-tasks-btn {
        display: block;
      }
    }
  }
}

$this-task-text-color: #333333;
$this-task-text-color-dark: #dddddd;
$this-task-text-color-done: #aaaaaa;

.task {
  $this-inner-padding-left-right: 6px;
  padding: 2px $this-inner-padding-left-right 0;
  display: block;
  margin-bottom: 6px;
  background-color: #ffffff;
  color: $this-task-text-color;
  position: relative;
  border: 1px solid #dddddd;
  border-bottom-width: 0;

  @include dark-theme {
    border-color: rgb(60, 60, 60);
    background-color: $dark-theme-bg-lighter;
    color: $this-task-text-color-dark;

    &.is-done {
      .time,
      .task-title {
        color: $dark-theme-text-color;
      }
      ng-md-icon {
        fill: $dark-theme-text-color;
      }
    }
  }

  &:last-child {
    margin-bottom: 0;
  }

  &.is-done {
    ng-md-icon {
      fill: $this-task-text-color-done !important;
    }

    .time,
    .task-title {
      color: $this-task-text-color-done;
    }

    .task-title {
      text-decoration: line-through;
    }
  }

  &.as-sortable-dragging,
  &:focus {
    background: #eeeeee;
    color: #000000;
    @include dark-theme {
      background-color: $dark-theme-bg-darker;
      color: #dddddd;
    }
  }

  .title-bar-wrapper {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    min-height: 36px;
    flex-grow: 1;
    flex-basis: 100%;
    @media(max-width: $layout-xs) {
      margin-bottom: 10px;
    }
  }

  .first-line {
    display: flex;
    flex-wrap: nowrap;
    user-select: none;

    @media(max-width: $layout-xs) {
      flex-wrap: wrap;
    }

    $this-button-spacer: 1px;
    $this-button-spacer-mobile: 1px;
    $this-button-size: 34px;
    $this-button-size-mobile: 34px;
    $this-icon-color: #545454;
    .md-icon-button {
      margin: $this-button-spacer;
      height: $this-button-size;
      width: $this-button-size;
      min-width: $this-button-size;
      min-height: $this-button-size;
      // this fixes the original link button icon for some reason
      line-height: $this-button-size + -1;
      padding: 0;
      box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
      border-radius: 100%;
      text-align: center;
      overflow: hidden;
      position: relative;
      transition: 0.1s !important;

      // theming
      border: 1px solid #dddddd;
      background: #ffffff !important;

      &.update-indicator-btn {
        margin-left: 12px;

        .task-list .task-list & {
          margin: $this-button-spacer;
          margin-right: -2px;
        }
      }

      @include dark-theme {
        background: $dark-theme-bg-darker !important;
        border: 1px solid $dark-theme-bg;
      }

      @at-root {
        .task {
          .md-icon-button:hover,
          .md-icon-button.is-active,
          &.is-current .md-icon-button.play-btn {
            background: #000000 !important;
            background: $this-icon-color !important;
            border-color: transparent;

            @include dark-theme {
              background: #ffffff !important;
            }

            > ng-md-icon {
              fill: #ffffff !important;
              @include dark-theme {
                fill: #000000 !important;
              }
            }
          }
        }
      }

      ng-md-icon {
        fill: $this-icon-color;
        margin: 0;
        padding: 0;
        line-height: 1;
        @include dark-theme {
          fill: $dark-theme-text-color-lighter;
        }
      }

      &.delete-btn {
        ng-md-icon.delete-icon {
          fill: $red !important;
          @include dark-theme {
            fill: $red !important;
          }
        }

        &:hover {
          background: $red-danger !important;
          ng-md-icon.delete-icon {
            fill: #ffffff !important;
            @include dark-theme {
              fill: #ffffff !important;
            }
          }
        }
      }

      @media(max-width: $layout-xs) {
        margin: $this-button-spacer-mobile;
        height: $this-button-size-mobile;
        width: $this-button-size-mobile;
        min-width: $this-button-size-mobile;
        min-height: $this-button-size-mobile;
        line-height: $this-button-size-mobile + -1;
      }
    }

    // Button Stuff
    ng-md-icon {
      fill: #545454;
    }

    .play-btn {
      padding-left: 0;
      margin-left: -2px;
      margin-right: 3px;
      // move over original link btn
      position: relative;
      z-index: 1;
    }

    .show-notes-btn {
      &.is-active {
        transform: rotate(45deg);
      }
    }
  }

  .controls {
    white-space: nowrap;
    text-align: right;
    // move a little closer to the right
    margin-right: -2px;

    // nice idea but problematic with the time button and also the play and original issue
    //transition: 300ms;
    //&:hover {
    //  transform: scale(1.2);
    //}
    @media(max-width: $layout-xs) {
      white-space: normal;
    }
  }

  &.is-current {
    background: $light-green;
    color: #000000;

    @include dark-theme {
      background-color: $dark-green;
      color: #ffffff;
    }

    .md-bar {
      background-color: $green !important;
    }
  }

  .md-bar {
    background-color: #cccccc !important;
  }

  md-progress-linear {
    margin-top: 1px;
    margin-left: -1*$this-inner-padding-left-right;
    margin-right: -1*$this-inner-padding-left-right;
    width: auto;
  }

  md-progress-linear.md-default-theme .md-container,
  md-progress-linear .md-container {
    background: none;
  }

  .handle {
    margin: 0 4px 0 6px;
  }

  .task-title {
    text-align: left;
    cursor: pointer;
    outline: none;
    margin-left: 10px;
    .text {
      outline: none;
      display: block;
      width: 100%;
      min-height: 14px;
    }
  }

  form {
    width: 100%;
  }
  input {
    outline: none;
  }
  input {
    width: 100%;
    display: block;
    box-sizing: border-box;
    height: 30px;
    padding: 4px 10px;
    border: none;
  }

  .time {
    font-style: italic;
    white-space: nowrap;
    margin-left: 10px;
    margin-right: 10px;
    @media(max-width: $layout-xs) {
      margin-left: 8px;
      font-size: 13px;
    }
  }

  .notes {
    $this-notes-extra-padding: 3px;
    display: block;
    margin-left: -$this-inner-padding-left-right;
    margin-right: -$this-inner-padding-left-right;
    overflow: hidden;
    padding-left: $this-inner-padding-left-right +$this-notes-extra-padding;
    padding-right: $this-inner-padding-left-right +$this-notes-extra-padding;

    section {
      margin-top: 10px;
    }

    .md-caption {
      font-weight: bold;
      margin-bottom: 6px;
    }
  }

  a {
    cursor: pointer;
  }

  .status {
    margin-bottom: 10px;
  }
  .changelog,
  .comments,
  .attachments {
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 0;
    margin: 0 0 10px;
    list-style-type: none;
    li {
      padding: 0;
      font-size: 14px;
      margin-top: 5px;
    }
  }

  .comments {
    li {
      position: relative;
      margin-top: 16px;
      &:first-child {
        margin-top: 8px;
        &:before {
          display: none;
        }
      }
    }
    p:first-child {
      display: inline;
    }
    p {
      margin-bottom: 8px;
      margin-top: 8px;
    }
  }
}

// animations
.is-animation-ready {
  .first-line {
    .md-button,
    md-checkbox {
      transition: 200ms;
    }
  }

  .task {
    @include crawl-in-out;

    &:focus {
      transition: none;
    }

    &.is-current {
      .play-btn {
        transition: all $transition-duration-s $ease-in-out-quint;
      }
    }
  }

  .notes {
  }

  .task .time {
    .md-icon-button {
      &.ng-enter,
      &.ng-leave {
        transition: none !important;
      }
    }
  }
}

@keyframes task-started-animation {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}

