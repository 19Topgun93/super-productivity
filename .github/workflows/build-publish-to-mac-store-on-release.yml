name: Mac Store Release on Release
on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs: null

jobs:
  windows-store-artifact:
    runs-on: windows-latest

    if: "!github.event.release.prerelease"

    steps:
      - name: Echo is Release
        run: echo "IS_RELEASE $IS_RELEASE, ${{ startsWith(github.ref, 'refs/tags/v') }}"
        env:
          IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Check out Git repository
        uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Yarn Packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - run: 'echo "$PROVISION_PROFILE" | base64 --decode > embedded.provisionprofile'
        shell: bash
        env:
          PROVISION_PROFILE: ${{secrets.mas_provision_profile}}

      - name: Lint
        run: yarn lint

      - name: Test Unit
        run: yarn test

      - name: Test E2E
        run: yarn e2e

      - name: Build Frontend & Electron
        run: yarn build

      - name: Build Electron app
        run: dist:mac:mas:buildOnly

      - name: Validate App
        run: xcrun altool --validate-app -f app-builds/mas/superProductivity-*.pkg -u $APPLEID -p APPLEIDPASS
        env:
          APPLEID: ${{secrets.APPLEID}}
          APPLEIDPASS: ${{secrets.APPLEIDPASS}}

      - name: Push to Store
        run: xcrun altool --upload-app -f app-builds/mas/superProductivity-*.pkg -u $APPLEID -p APPLEIDPASS
        env:
          APPLEID: ${{secrets.APPLEID}}
          APPLEIDPASS: ${{secrets.APPLEIDPASS}}
